pipeline {
    agent any

    environment {
        //Use Pipeline Utility Steps plugin to read information from pom.xml into env variables
        ARTIFACT = readMavenPom().getArtifactId()
        VERSION = readMavenPom().getVersion()
        WAR_NAME = readMavenPom().getBuild().getFinalName()
    }
    stages {
        stage('Build manven') {
            /* This builds the actual image; synonymous to
             * docker build on the command line */
            steps {
                sh 'mvn clean package -P prod,ws -DskipTests -s src/resources/settings.xml -X'

            }
        }

        stage('Docker build and push') {
            /* This builds the actual image; synonymous to
             * docker build on the command line */
            steps {
                sh 'cp /var/jenkins_home/workspace/templates-deployment/docker/contabil/DockerfileWildfly Dockerfile'
                sh 'cp /var/jenkins_home/workspace/templates-deployment/docker/contabil/standalone.xml standalone.xml'
                sh 'mv target/$WAR_NAME.war target/$ARTIFACT.war'
                sh 'docker build -t wildfly-contabil-ws . --no-cache'
                sh 'docker tag wildfly-contabil-ws rdocker.mateus:5001/ithappens/wildfly-contabil-ws:latest'
                sh 'docker tag wildfly-contabil-ws rdocker.mateus:5001/ithappens/wildfly-contabil-ws:$VERSION'
                sh 'docker push rdocker.mateus:5001/ithappens/wildfly-contabil-ws:latest'
                sh 'docker push rdocker.mateus:5001/ithappens/wildfly-contabil-ws:$VERSION'

            }
        }

        stage('Deploy Kubernetes Producao') {
            when {
                branch 'master'
            }
            environment {
                IMAGE_DOCKER = "rdocker.mateus:5001/ithappens/wildfly-contabil-ws:$VERSION"
                WORKSPACE_DEPLOYMENT = '/var/jenkins_home/workspace/templates-deployment'
                deploymentFileName = 'deployment-wildfly-contabil-ws.yaml'
                GROOVYFILE = "${WORKSPACE_DEPLOYMENT}/configs/contabilidade-wildfly-${ARTIFACT}.groovy"
                DIR = "$WORKSPACE_DEPLOYMENT/$deploymentFileName $WORKSPACE"
                NAMESPACE = 'java-pro'
            }

            steps {

                withKubeConfig(caCertificate: '', clusterName: 'kubernetes', contextName: 'kubernetes-admin@kubernetes', credentialsId: '0084561c-977f-4dc0-ae41-48075a2507ca', namespace: '', serverUrl: 'https://k8s-lb.mateus:6443') {

                    sh 'cp $DIR'

                    load "${GROOVYFILE}"

                    sh 'rm -rf deployment.yaml'

                    //sh 'mv target/$WAR_NAME.war target/$ARTIFACT.war'

                    //sh 'kubectl cp target/$ARTIFACT.war java-pro/$(kubectl -n java-pro get pod -l app=$NAME_DEPLOYMENT -o jsonpath="{.items[0].metadata.name}"):/opt/jboss/wildfly/standalone/deployments/$ARTIFACT.war'

                    //sleep 10

                    //sh 'kubectl -n java-pro delete pods $(kubectl -n java-pro get pod -l app=$NAME_DEPLOYMENT -o jsonpath="{.items[0].metadata.name}")'

                    //sleep 20

                    sh 'cat $deploymentFileName | envsubst > deployment.yaml'

                    sh 'cat deployment.yaml'

                    sh 'kubectl --namespace=$NAMESPACE apply -f deployment.yaml'

                    sleep 60

                    sh 'kubectl rollout status deployment.v1.apps/$NAME_DEPLOYMENT --namespace=$NAMESPACE'
                }
            }
        }

    }
}