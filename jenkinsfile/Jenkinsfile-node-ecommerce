pipeline {

   agent any

   environment {
      BRANCH_NAME="master"
      //Use Pipeline Utility Steps plugin to read information from pom.xml into env variables
      ARTIFACT = "ecommerce-painel"
      //VERSION="latest"
      VERSION = sh(script: 'echo $((${BUILD_NUMBER}%5))', returnStdout: true).trim()
      REGISTRY = '192.168.6.144:5001'
      //JENKINS_HOME = /var/lib/jenkins
      DIR_CONFIGS_BASE = "configs"
      DIR_CONFIGS_DOCKER = "${DIR_CONFIGS_BASE}/ansible/ecommerce"

   }

   stages {

      stage('Clone repository') {
         /* Let's make sure we have the repository cloned to our workspace */
         //checkout scm
         steps {
            git branch: 'master',
                  credentialsId: '105d78b2-3f22-467e-82ac-e52151f8a48f',
                  url: 'git@git.mateus:ecommerce/painelecommerce.git'

            sh "ls -lat"
         }

      }

      stage('Clone repository configs') {
         /* Let's make sure we have the repository cloned to our workspace */
         //checkout scm
         steps {
            sh "mkdir -p $DIR_CONFIGS_BASE"
            dir("$DIR_CONFIGS_BASE") {
               git branch: 'master',
                     credentialsId: '105d78b2-3f22-467e-82ac-e52151f8a48f',
                     url: 'git@git.mateus:alfredo_junior/templates-deployment.git'

               sh "ls -lat"
            }
         }

      }

      stage('Docker Build') {

         steps {

            sh "printenv"
            sh "cp $DIR_CONFIGS_DOCKER/Dockerfile-$ARTIFACT Dockerfile"
            sh "docker build -t $ARTIFACT ."
            sh "docker tag $ARTIFACT $REGISTRY/ithappens/$ARTIFACT:$VERSION-$BRANCH_NAME"
            sh "docker tag $ARTIFACT $REGISTRY/ithappens/$ARTIFACT:latest"
            sh "docker push $REGISTRY/ithappens/$ARTIFACT:$VERSION-$BRANCH_NAME"
            sh "docker push $REGISTRY/ithappens/$ARTIFACT:latest"
         }
      }

      stage('Deploy production') {

         environment {
            ANSIBLE_PLAYBOOK = "ansible/ecommerce/$ARTIFACT-prod.yaml"
            GROOVYFILE = "configs/node/ecommerce/$ARTIFACT-prod.groovy"
         }
         steps {
            dir("configs") {
               load "${GROOVYFILE}"
               sh 'printenv'
               sh 'cat $ANSIBLE_PLAYBOOK | envsubst > ansible.yml'
               sh 'ansible-playbook -i ansible/hosts ansible.yml'
            }
         }
      }
   }
}