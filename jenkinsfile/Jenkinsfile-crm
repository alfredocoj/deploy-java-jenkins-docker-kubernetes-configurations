pipeline {
    agent any

    environment {
        DOCKER_REPO = '10.121.2.211:5001/ithappens'
        IMAGE_NAME = 'crm-apprequests'
        VERSION = 'latest'
    }
    stages {
        stage('Clone repository') {
            /* Let's make sure we have the repository cloned to our workspace */

            //checkout scm
            steps {
                git branch: 'master',
                        //credentialsId: 'my_cred_id',
                        url: 'git@bitbucket.org:timecrm/apprequests.git'

                sh "ls -lat"
            }
        }

        stage('Build image') {
            /* This builds the actual image; synonymous to
             * docker build on the command line */
            steps {
                sh 'docker build -t apprequests .'

                sh 'docker tag $(docker images -q apprequests:latest) $DOCKER_REPO/$IMAGE_NAME:${VERSION}'

            }
        }

        stage('Test image') {
            /* Ideally, we would run a test framework against our image.
             * For this example, we're using a Volkswagen-type approach ;-) */

            steps {
                sh 'docker run -d --name "apprequests" -e PORT=7001 -p 7001:7001 apprequests:${VERSION}'
                sh 'docker stop apprequests'
                sh 'docker rm apprequests'

            }
        }

        stage('Push image') {
            steps {
                /* Finally, we'll push the image with two tags:
             * First, the incremental build number from Jenkins
             * Second, the 'latest' tag.
             * Pushing multiple tags is cheap, as all the layers are reused. */
                sh 'docker push ${DOCKER_REPO}/${IMAGE_NAME}:${VERSION}'
            }
        }

        stage('Deploy production') {
            environment {
                TEMPLATES_DIR_ANSIBLE='/var/lib/jenkins/workspace/templates-deployment/ansible'
                ANSIBLE_PLAYBOOK="${TEMPLATES_DIR_ANSIBLE}/mateusapp-appquest.yml"
            }
            steps {
                //sh 'printenv'

                sh 'cat $ANSIBLE_PLAYBOOK | envsubst > ansible.yml'
                sh 'ansible-playbook -i $TEMPLATES_DIR_ANSIBLE/hosts ansible.yml'
            }
        }

    }
}